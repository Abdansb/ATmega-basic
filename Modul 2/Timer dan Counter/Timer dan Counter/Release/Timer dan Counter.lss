
Timer dan Counter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000011c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  0000011c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000011c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000014c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000004f8  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004b4  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000115  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000019c  00000000  00000000  00000c4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	23 c0       	rjmp	.+70     	; 0x4a <__bad_interrupt>
   4:	22 c0       	rjmp	.+68     	; 0x4a <__bad_interrupt>
   6:	21 c0       	rjmp	.+66     	; 0x4a <__bad_interrupt>
   8:	20 c0       	rjmp	.+64     	; 0x4a <__bad_interrupt>
   a:	1f c0       	rjmp	.+62     	; 0x4a <__bad_interrupt>
   c:	1e c0       	rjmp	.+60     	; 0x4a <__bad_interrupt>
   e:	1d c0       	rjmp	.+58     	; 0x4a <__bad_interrupt>
  10:	1c c0       	rjmp	.+56     	; 0x4a <__bad_interrupt>
  12:	1b c0       	rjmp	.+54     	; 0x4a <__bad_interrupt>
  14:	1a c0       	rjmp	.+52     	; 0x4a <__bad_interrupt>
  16:	19 c0       	rjmp	.+50     	; 0x4a <__bad_interrupt>
  18:	18 c0       	rjmp	.+48     	; 0x4a <__bad_interrupt>
  1a:	17 c0       	rjmp	.+46     	; 0x4a <__bad_interrupt>
  1c:	16 c0       	rjmp	.+44     	; 0x4a <__bad_interrupt>
  1e:	15 c0       	rjmp	.+42     	; 0x4a <__bad_interrupt>
  20:	14 c0       	rjmp	.+40     	; 0x4a <__bad_interrupt>
  22:	13 c0       	rjmp	.+38     	; 0x4a <__bad_interrupt>
  24:	12 c0       	rjmp	.+36     	; 0x4a <__bad_interrupt>
  26:	1f c0       	rjmp	.+62     	; 0x66 <__vector_19>
  28:	10 c0       	rjmp	.+32     	; 0x4a <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d2 e0       	ldi	r29, 0x02	; 2
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_clear_bss>:
  36:	20 e0       	ldi	r18, 0x00	; 0
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	01 c0       	rjmp	.+2      	; 0x40 <.do_clear_bss_start>

0000003e <.do_clear_bss_loop>:
  3e:	1d 92       	st	X+, r1

00000040 <.do_clear_bss_start>:
  40:	a2 36       	cpi	r26, 0x62	; 98
  42:	b2 07       	cpc	r27, r18
  44:	e1 f7       	brne	.-8      	; 0x3e <.do_clear_bss_loop>
  46:	02 d0       	rcall	.+4      	; 0x4c <main>
  48:	2d c0       	rjmp	.+90     	; 0xa4 <_exit>

0000004a <__bad_interrupt>:
  4a:	da cf       	rjmp	.-76     	; 0x0 <__vectors>

0000004c <main>:
  4c:	81 e0       	ldi	r24, 0x01	; 1
  4e:	87 bb       	out	0x17, r24	; 23
  50:	88 e0       	ldi	r24, 0x08	; 8
  52:	83 bf       	out	0x33, r24	; 51
  54:	88 ec       	ldi	r24, 0xC8	; 200
  56:	8c bf       	out	0x3c, r24	; 60
  58:	82 e0       	ldi	r24, 0x02	; 2
  5a:	89 bf       	out	0x39, r24	; 57
  5c:	78 94       	sei
  5e:	83 b7       	in	r24, 0x33	; 51
  60:	85 60       	ori	r24, 0x05	; 5
  62:	83 bf       	out	0x33, r24	; 51
  64:	ff cf       	rjmp	.-2      	; 0x64 <main+0x18>

00000066 <__vector_19>:
  66:	1f 92       	push	r1
  68:	0f 92       	push	r0
  6a:	0f b6       	in	r0, 0x3f	; 63
  6c:	0f 92       	push	r0
  6e:	11 24       	eor	r1, r1
  70:	8f 93       	push	r24
  72:	9f 93       	push	r25
  74:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  78:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  7c:	01 96       	adiw	r24, 0x01	; 1
  7e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  82:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  86:	98 b3       	in	r25, 0x18	; 24
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	89 27       	eor	r24, r25
  8c:	88 bb       	out	0x18, r24	; 24
  8e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  92:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  96:	9f 91       	pop	r25
  98:	8f 91       	pop	r24
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	0f 90       	pop	r0
  a0:	1f 90       	pop	r1
  a2:	18 95       	reti

000000a4 <_exit>:
  a4:	f8 94       	cli

000000a6 <__stop_program>:
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <__stop_program>
