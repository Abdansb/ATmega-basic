
UTS NO 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000114  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <adc_init>:
  6c:	80 e4       	ldi	r24, 0x40	; 64
  6e:	87 b9       	out	0x07, r24	; 7
  70:	87 e8       	ldi	r24, 0x87	; 135
  72:	86 b9       	out	0x06, r24	; 6
  74:	08 95       	ret

00000076 <adc_read>:
  76:	97 b1       	in	r25, 0x07	; 7
  78:	87 70       	andi	r24, 0x07	; 7
  7a:	98 7f       	andi	r25, 0xF8	; 248
  7c:	89 2b       	or	r24, r25
  7e:	87 b9       	out	0x07, r24	; 7
  80:	36 9a       	sbi	0x06, 6	; 6
  82:	36 99       	sbic	0x06, 6	; 6
  84:	fe cf       	rjmp	.-4      	; 0x82 <adc_read+0xc>
  86:	84 b1       	in	r24, 0x04	; 4
  88:	95 b1       	in	r25, 0x05	; 5
  8a:	08 95       	ret

0000008c <main>:
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	84 bb       	out	0x14, r24	; 20
  90:	0e 94 36 00 	call	0x6c	; 0x6c <adc_init>
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	80 e7       	ldi	r24, 0x70	; 112
  98:	92 e0       	ldi	r25, 0x02	; 2
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	80 40       	sbci	r24, 0x00	; 0
  9e:	90 40       	sbci	r25, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0xe>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x18>
  a4:	00 00       	nop
  a6:	c1 e0       	ldi	r28, 0x01	; 1
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	0e 94 3b 00 	call	0x76	; 0x76 <adc_read>
  ae:	84 3f       	cpi	r24, 0xF4	; 244
  b0:	91 40       	sbci	r25, 0x01	; 1
  b2:	10 f4       	brcc	.+4      	; 0xb8 <main+0x2c>
  b4:	c5 bb       	out	0x15, r28	; 21
  b6:	f8 cf       	rjmp	.-16     	; 0xa8 <main+0x1c>
  b8:	15 ba       	out	0x15, r1	; 21
  ba:	f6 cf       	rjmp	.-20     	; 0xa8 <main+0x1c>

000000bc <_exit>:
  bc:	f8 94       	cli

000000be <__stop_program>:
  be:	ff cf       	rjmp	.-2      	; 0xbe <__stop_program>
